{"version":3,"sources":["file:///C:/PROJECT/COCOS/SRC/2025/BLOCK_PUZZLE_SAGA/assets/script/utils.ts"],"names":["TGameClass","TSceneClass","TSceneManager","msToTime","duration","milliseconds","parseInt","seconds","Math","floor","minutes","hours","PRELOAD_STATUS","MAIN_STATUS","constructor","root","sceneManager","scene","active","startScene","restartScene","endScene","loop","deltaTime","animate","update","draw","sceneLists","currentScene","Map","addScene","sceneName","set","setCurrentScene","get","console","log","changeCurrentScene","removeFromParent"],"mappings":";;;kEAwCaA,U,EAUAC,W,EAyBAC,a;;AA6BN,WAASC,QAAT,CAAkBC,QAAlB,EAAoC;AACvC;AACA,QAAIC,YAAY,GAAGC,QAAQ,CAAEF,QAAQ,GAAG,IAAZ,GAAoB,GAArB,CAA3B;AAAA,QACEG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYL,QAAQ,GAAG,IAAZ,GAAoB,EAA/B,CADZ;AAAA,QAEEM,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYL,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,EAAtC,CAFZ;AAAA,QAGEO,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAYL,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,GAAgC,EAA3C,CAHV,CAFuC,CAOvC;;AACAO,IAAAA,KAAK,GAAIA,KAAK,GAAG,EAAT,GAAe,MAAMA,KAArB,GAA6BA,KAArC,CARuC,CASvC;;AACAD,IAAAA,OAAO,GAAIA,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAA3C,CAVuC,CAWvC;;AACAH,IAAAA,OAAO,GAAIA,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAA3C,CAZuC,CAcvC;;AACA,WAAOI,KAAK,GAAG,GAAR,GAAcD,OAAd,GAAwB,GAAxB,GAA8BH,OAArC,CAfuC,CAgBvC;AACH,G,CACD;;;;;;;cAlBgBJ;;;;;;;;;;;;;;;;gCAtFJS,c,0BAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;eAAAA,c;;;6BASAC,W,0BAAAA,W;AAAAA,QAAAA,W,CAAAA,W;AAAAA,QAAAA,W,CAAAA,W;AAAAA,QAAAA,W,CAAAA,W;AAAAA,QAAAA,W,CAAAA,W;AAAAA,QAAAA,W,CAAAA,W;AAAAA,QAAAA,W,CAAAA,W;AAAAA,QAAAA,W,CAAAA,W;AAAAA,QAAAA,W,CAAAA,W;eAAAA,W;cAWZ;;;4BAEab,U,GAAN,MAAMA,UAAN,CAAiB;AAGpBc,QAAAA,WAAW,CAACC,IAAD,EAAa;AAAA,eAFxBA,IAEwB;AAAA,eADxBC,YACwB;AACpB,eAAKD,IAAL,GAAYA,IAAZ;AACA,eAAKC,YAAL,GAAoB,IAAId,aAAJ,EAApB;AACH;;AANmB,O;;6BAUXD,W,GAAN,MAAMA,WAAN,CAAkB;AAKrBa,QAAAA,WAAW,CAACC,IAAD,EAAaC,YAAb,EAA0C;AAAA,eAJrDD,IAIqD;AAAA,eAHrDE,KAGqD;AAAA,eAFrDD,YAEqD;AAAA,eADrDE,MACqD;AACjD,eAAKH,IAAL,GAAYA,IAAZ;AACA,eAAKC,YAAL,GAAoBA,YAApB;AACA,eAAKE,MAAL,GAAc,KAAd;AACH;;AAEDC,QAAAA,UAAU,GAAG,CAAE;;AACfC,QAAAA,YAAY,GAAG,CAAE;;AACjBC,QAAAA,QAAQ,GAAG,CAAE;;AACbC,QAAAA,IAAI,CAACC,SAAD,EAAoB;AACpB,cAAI,CAAC,KAAKL,MAAV,EAAkB;AAClB,eAAKM,OAAL,CAAaD,SAAb;AACA,eAAKE,MAAL,CAAYF,SAAZ;AACA,eAAKG,IAAL,CAAUH,SAAV;AACH;;AACDE,QAAAA,MAAM,CAACF,SAAD,EAAoB,CAAE;;AAC5BC,QAAAA,OAAO,CAACD,SAAD,EAAoB,CAAE;;AAC7BG,QAAAA,IAAI,CAACH,SAAD,EAAoB,CAAE;;AAtBL,O;;+BAyBZrB,a,GAAN,MAAMA,aAAN,CAAoB;AAGvBY,QAAAA,WAAW,GAAG;AAAA,eAFda,UAEc;AAAA,eADdC,YACc;AACV,eAAKD,UAAL,GAAkB,IAAIE,GAAJ,EAAlB;AACH;;AAEDC,QAAAA,QAAQ,CAACC,SAAD,EAAoBd,KAApB,EAAwC;AAC5C,eAAKU,UAAL,CAAgBK,GAAhB,CAAoBD,SAApB,EAA+Bd,KAA/B;AACH;;AAEDgB,QAAAA,eAAe,CAACF,SAAD,EAAoB;AAC/B,eAAKH,YAAL,GAAoB,KAAKD,UAAL,CAAgBO,GAAhB,CAAoBH,SAApB,CAApB;AACA,eAAKH,YAAL,CAAkBT,UAAlB;AACA,eAAKS,YAAL,CAAkBV,MAAlB,GAA2B,IAA3B;AACAiB,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKR,YAArC;AACH;;AAEDS,QAAAA,kBAAkB,CAACN,SAAD,EAAoB;AAClC,eAAKH,YAAL,CAAkBV,MAAlB,GAA2B,KAA3B;AACA,eAAKU,YAAL,CAAkBX,KAAlB,CAAwBqB,gBAAxB;AACA,eAAKL,eAAL,CAAqBF,SAArB;AACH;;AAEDT,QAAAA,IAAI,CAACC,SAAD,EAAoB;AACpB,eAAKK,YAAL,CAAkBN,IAAlB,CAAuBC,SAAvB;AACH;;AA1BsB,O","sourcesContent":["import { Component, Node, Prefab } from \"cc\";\r\n\r\nexport interface MYGAME {\r\n    gameName: string;\r\n    gameRate: string;\r\n    gameUrl: string;\r\n    screen: number;\r\n    vote: boolean;\r\n}\r\n\r\nexport interface ADDGAME {\r\n    gameName: string;\r\n    gameRate: string;\r\n    gameUrl: string;\r\n    screen: number;\r\n    add: boolean;\r\n}\r\n\r\nexport enum PRELOAD_STATUS {\r\n    'NONE',\r\n    'INIT',\r\n    'INIT_STAND',\r\n    'PRELOAD',\r\n    'PRELOAD_STAND',\r\n    'PRELOAD_FINISH'\r\n}\r\n\r\nexport enum MAIN_STATUS {\r\n    'NONE',\r\n    'INIT',\r\n    'INIT_STAND',\r\n    'PRELOAD',\r\n    'PRELOAD_STAND',\r\n    'PRELOAD_FINISH',\r\n    'MAIN_RUN',\r\n    'WEBVIEW_RUN'\r\n}\r\n\r\n// ====================================================================================================================================\r\n\r\nexport class TGameClass {\r\n    root: Node;\r\n    sceneManager: TSceneManager;\r\n    constructor(root: Node) {\r\n        this.root = root;\r\n        this.sceneManager = new TSceneManager();\r\n    }\r\n}\r\n\r\n\r\nexport class TSceneClass {\r\n    root: Node;\r\n    scene: Node;\r\n    sceneManager: TSceneManager;\r\n    active: boolean;\r\n    constructor(root: Node, sceneManager: TSceneManager) {\r\n        this.root = root;\r\n        this.sceneManager = sceneManager;\r\n        this.active = false;\r\n    }\r\n\r\n    startScene() {}\r\n    restartScene() {}\r\n    endScene() {}\r\n    loop(deltaTime: number) {\r\n        if (!this.active) return;\r\n        this.animate(deltaTime);\r\n        this.update(deltaTime);\r\n        this.draw(deltaTime);\r\n    }\r\n    update(deltaTime: number) {}\r\n    animate(deltaTime: number) {}\r\n    draw(deltaTime: number) {}\r\n}\r\n\r\nexport class TSceneManager {\r\n    sceneLists: Map<string, TSceneClass>;\r\n    currentScene: TSceneClass;\r\n    constructor() {\r\n        this.sceneLists = new Map();\r\n    }\r\n\r\n    addScene(sceneName: string, scene: TSceneClass) {\r\n        this.sceneLists.set(sceneName, scene);\r\n    }\r\n\r\n    setCurrentScene(sceneName: string) {\r\n        this.currentScene = this.sceneLists.get(sceneName);\r\n        this.currentScene.startScene();\r\n        this.currentScene.active = true;\r\n        console.log('setCurrentScene:', this.currentScene);\r\n    }\r\n\r\n    changeCurrentScene(sceneName: string) {\r\n        this.currentScene.active = false;\r\n        this.currentScene.scene.removeFromParent();\r\n        this.setCurrentScene(sceneName);\r\n    }\r\n\r\n    loop(deltaTime: number) {\r\n        this.currentScene.loop(deltaTime);\r\n    }\r\n}\r\n\r\nexport function msToTime(duration): string {\r\n    //@ts-ignore\r\n    var milliseconds = parseInt((duration % 1000) / 100),\r\n      seconds = Math.floor((duration / 1000) % 60),\r\n      minutes = Math.floor((duration / (1000 * 60)) % 60),\r\n      hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n\r\n    //@ts-ignore\r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    //@ts-ignore\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    //@ts-ignore\r\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n    // return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\r\n    return hours + \":\" + minutes + \":\" + seconds;\r\n    // return minutes + \":\" + seconds;\r\n}\r\n// ====================================================================================================================================\r\n"]}